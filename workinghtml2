<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Wolfram Alpha Short Answers API Test</title>
    <style>
        body {
            direction: rtl;
        }
        .english {
            direction: ltr;
            unicode-bidi: embed;
        }
    </style>
    
</head>
<h2>חקירת פונקציה</h2>

<form id="queryForm">
    <label for="functionInput">הכנס פונקציה כאן (למשל, x^3 - 4x):</label>
    <input type="text" id="functionInput" class="english" required>
    <button type="submit">חקור פונקציה</button>
</form>
<p id="result"></p>
<script>
    const form = document.getElementById('queryForm');
	const resultElement = document.getElementById('result');

	form.addEventListener('submit', async function(e) {
    e.preventDefault();

    const functionQuery = encodeURIComponent(document.getElementById('functionInput').value);

    try {
        const response = await fetch(`http://localhost:5000/getCriticalPoints?mathFunction=${functionQuery}`);
        const jsonResponse = await response.json();

        if (jsonResponse.error) {
            resultElement.textContent = 'Error: ' + jsonResponse.error;
        } else {
            let domainStr = `תחום: ${jsonResponse.domain}<br>`;
    		let extremePointsStr = 'נקודות קיצון:<br>';
        jsonResponse.extreme_points.extreme_points.forEach(point => {
            extremePointsStr += `נקודה: <span class="english" style="display: inline;">(${point.x},${point.y})</span>, סוג: <span class="english" style="display: inline;">${point.type}</span><br>`;
        });
        let increasingIntervals = `תחומי עלייה: <span class="english" style="display: inline;">${jsonResponse.increasing_decreasing_intervals.increasing_intervals}</span><br>`;
        let decreasingIntervals = `תחומי ירידה: <span class="english" style="display: inline;"> ${jsonResponse.increasing_decreasing_intervals.decreasing_intervals}</span><br>`;
        let horizontal_asymptote = `אסימםטוטות אופקיות: [y =  ${jsonResponse.asymptotes.horizontal_asymptote}]`
        let vertical_asymptotes = 'אסימפטוטות אנכיות';
        vertical_asymptotes+= `[`
        jsonResponse.asymptotes.vertical_asymptotes.forEach((point, index, array) => {
            vertical_asymptotes += `x = ${point}`;
                if (index < array.length - 1) {
                    vertical_asymptotes += ', ';
                }
            });
        vertical_asymptotes += `]`
        let inflection_points = 'נקודות פיתול:<br>'
        jsonResponse.inflection_points.inflection_points.forEach(point => {
            inflection_points += `נקודה: <span class="english" style="display: inline;">(${point.x},${point.y})</span><br>`;
        });
        let intersections_with_x = `נקודות חיתוך עם ציר ה-x:<br>`;
        intersections_with_x += `[`;
        jsonResponse.intersections_with_axes.with_x.forEach((point, index, array) => {
            intersections_with_x += `x = ${point.x}`;
            if(index < array.length - 1){
                intersections_with_x += `, `;
            } 
        });
        intersections_with_x += `]`;
        let intersections_with_y = `נקודות חיתוך עם ציר ה-y:<br>`;
        intersections_with_y += `[`;
        jsonResponse.intersections_with_axes.with_y.forEach(point => {
            intersections_with_y += `y = ${point.y}`;
        });
        intersections_with_y += `]`;
        
        
        resultElement.innerHTML = `<p>${domainStr} <br/> ${extremePointsStr} <br/> 
                                    ${increasingIntervals} <br/>${decreasingIntervals} <br/> 
                                    ${horizontal_asymptote}<br/><br/> ${vertical_asymptotes}<br/><br/> 
                                    ${inflection_points}<br/> ${intersections_with_x}<br/><br/> 
                                    ${intersections_with_y}</p>`;
        }
    } catch (error) {
        console.error(error);
        resultElement.textContent = 'Error fetching results.';
    }
});
</script>